name: Release package

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x' # SDK Version to use.

      # Pack the client nuget package and include url back to the repository and release tag
      - name: Build and Pack
        run: dotnet pack
          --configuration Release
          --output "${{github.workspace}}/artifacts/packages"
          /p:PackageProjectUrl="${{ github.server_url }}/${{ github.repository }}/tree/${{ github.event.release.tag_name }}"
          /p:PackageReleaseNotes="${{ github.server_url }}/${{ github.repository }}/blob/${{ github.event.release.tag_name }}/CHANGELOG.md"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ${{github.workspace}}/artifacts

  test:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    environment: Live Testing
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x' # SDK Version to use.

      # Pack the client nuget package and include url back to the repository and release tag
      - name: Run Live Tests
        run: dotnet test
          --configuration Release
          --filter="TestCategory!=Smoke&TestCategory!=Image&TestCategory!=Moderations&TestCategory!=Manual"
          --logger "trx;LogFileName=${{github.workspace}}/artifacts/test-results/live.trx"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-artifacts
          path: ${{github.workspace}}/artifacts

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/download-artifact@v2

          # Append the nuget package to the github release that triggered this workflow
      - name: Upload release asset
        run: gh release upload ${{ github.event.release.tag_name }}
          ${{github.workspace}}/build-artifacts/packages/*.*nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish NuGet package
        run: dotnet nuget push
          ${{github.workspace}}/artifacts/packages/*.nupkg
          --source https://api.nuget.org/v3/index.json
          --api-key ${{ secrets.NUGET_API_KEY }}
          --skip-duplicate
